<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on Malu Blog</title>
    <link>https://malu.ome/tags/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on Malu Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 19 May 2018 22:41:48 +0000</lastBuildDate><atom:link href="https://malu.ome/tags/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>多贝云的一次电话面试</title>
      <link>https://malu.ome/post/%E5%A4%9A%E8%B4%9D%E4%BA%91%E7%9A%84%E4%B8%80%E6%AC%A1%E7%94%B5%E8%AF%9D%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Sat, 19 May 2018 22:41:48 +0000</pubDate>
      
      <guid>https://malu.ome/post/%E5%A4%9A%E8%B4%9D%E4%BA%91%E7%9A%84%E4%B8%80%E6%AC%A1%E7%94%B5%E8%AF%9D%E9%9D%A2%E8%AF%95/</guid>
      <description>​	在上一次多贝云的笔试完之后，宣讲会上介绍公司都是处理上万的QPS, 每天上百G的日子，特别是CTO讲到现在特别需求的是C++的程序员后就没报太大希望了。 本以为技术栈不符合会被拒的。。。但是一天中午我微信有个好友申请说是多贝云的人。我就一下子激灵了。
​	他先自我介绍了一方，讲了一下多贝云现在的技术栈，使用的语言，和Python现在在它们公司在做的事情。说是想和我先聊聊。先是问题是对Python有特别的偏好吗?是什么原因让你学Python呢?
​	之前在绿盟也谈到为什么要学Python语言，有什么喜欢的地方。然后就说了因为之前写一个项目技术栈用到Flask， 感觉Python语言特别方便，语法糖很喜欢。故现在做课程作业也都在用Python写。也不是对编程语言有啥特别的偏好，如果做的事情有意思我觉得语言不是障碍。
​	之前绿盟的面试官在我讲到语法糖后突然让我表达一下什么是语法糖。我就说了 for in 这样的循环，在迭代一个列表的时候特别直观。C++里就得循环一个下标列表，使用下标去从数组里取。话说 for 循环算不算 while 的一个语法糖？然后装饰器也算一个？ （那时候面对面的情况慌得不行，感觉很多情况下我想表达的东西都没能正确无误的表达出来）
​	之后问了我以后是否想来北京工作，我回答我之后想去北上广。当然真实情况是那个地方有广式的烤鸭就行。。。	武汉的烤鸭和我印象里的烤鸭根本不一样！！！真的，每个人都应该了解下广式的烤鸭。真的不是武汉这样干巴巴的。
​	之后就说让HR和我约下面试时间！不久一个小姐姐就打电话过来，预约了两天后的早上十点，电话面试。还特别提到需要一台电脑，可能会用到。
​	预约的那天早上10点钟过一点就有一个北京的电话打进来，自我介绍了一下是多贝云的且那天在微信和我聊过之后面试就开始了。面试官那边还说了看过我的博客，了解了我的一些技术栈，然后让我介绍一下我简历上做的项目。（话说我简历上也没写上我的博客地址，估计还翻了一下我的Github，真是感激了。），然后我简单的说了一下交易所做的事情，然后问了项目是否在线上跑，问了一下地址。我说了HTTPS://Stock.malu.moe, 那时候觉得里面爬的都是里番。。直接给面试官看是不是不太好。。他突然说了是不是ACGN-STOCK.com，连忙解释不是这个，但是是按照这个做的，很喜欢这个网站。后面面试官也没深究是哪个网站。。。不知道是不在乎还是在博文里找到了。
​	接下来便是面试官一轮一轮的提问了，期间交流了一个小时，我只尽量回忆起一些问题并记录下来。
Q.然后就着项目问我项目在服务器上是怎么运行的，我说了uwsgi+nginx。问道了session是怎么管理的，
A.使用的Flask里内置的。但是Falsk的session在客户端是以cookie储存的。
Q.有了解过Falsk里面session储存是怎么实现的吗？
A.没有，后面了解Flask里面每个请求的默认的 session 对象是 SecureCookieSession，这个类就是一个基本的字典，外加一些特殊的属性。
Q.假如你这项目由多个后端，你觉得该怎么解决session在后端的储存，怎么保证用户的登录状态。
A.先是回答没有了解过，但是面试官会鼓励你尝试的去给个解决方案，我说道使用同步保存session的数据库，或者保证处理用户的始终是一个，不变的服务器。最后面试官说确实这两种方法都会用到，也都是混合使用的。
Q.你项目里用到Redis做了什么，是怎么缓存数据库的数据的。怎么保证数据的状态是最新的。
A.做了爬虫的缓存，和一些查询数据库的缓存。查询到数据库数据后格式化为JSON数据储存起来，下次查询先查Redis时候由这条查询，如果由就直接返回Redis里的数据，没有就查询数据库把查询到的数据储存到Redis里再染回数据。Redis里我会设置过期时间，而缓存的数据有效性都是一天的，因为我爬虫设置每天才更新一次，这样解决数据有效性的问题。
之后有问到网页怎么架设的，我说uwsgi + Nginx 但是估计我Nginx发音有问题？他没听清，我也怂了。。就说了没有，他也很困惑的结束了这个问题。估计是想问Nginx ?
Q.多进程对处理多个用户是怎么处理的，有什么好处
A.这个没了解。但是在鼓励下说了多个进程能够处理多个用户的同时请求。感觉不是很满意？当然不满意！
那时候我感觉4个进程只能同时解决4个用户同时请求，多了就得等待？自己也感觉不对。
之后了解了下Nginx现在是多进程+异步非阻塞的方式实现高并发。使用异步能大幅度的解决多个用户同时访问的问题，多个socket使用一个进程，当socket处理到出现阻塞时进程便处理其他的socket，当socket请求来了再回调进程去给他处理。
类似处理网络请求的实现是在Linux上是一些IO操作，而Linux上的IO操作模式至今可分为三个阶段，分别为select，poll，epoll。poll解决了select的一些问题，但是其模式还是类似任务调度的轮询，在处理多个任务（socket）时性能会大幅下降。epoll的出现彻底实现了回调的操作，使得相较poll的方法性能有大幅度的提升。
而使用多个进程能够充分利用现在CPU的多核，但是每个进程下仍是处理多个socket。使得实现了现在的高并发。
但是系统的问题多个进程会有 ” 惊群“ 问题，大概意思就是又回到需要一个进程处理但是系统会唤起所有进程。又退回到轮询的状态，好在现在各有个的解决方案。
之后面试官微信发给我一个链接，打开后是编辑器的页面，两边能够同时在上面码代码。
写了一个函数的框架，叫我实现具体细节，类似寻找数组里的数返回其下标，期间根据要求修改了几次。在做题的时候时刻提醒自己要考虑各种输入情况，但是实战的时候还是实现功能就感觉完成了。
之后问到了迭代器和生成器，那一段时间因为我页面不在打开的页面没有看到面试官的输入，也没理解面试官问的是什么问题。。。神游了一段时间，那段时间真的感觉无比漫长，感觉那时候都要挂了。
提问大概是搜索数据库返回的是什么，大概是想问题迭代器的问题？然后我没有看到他的输入，估计也是对着代码对我提问，等我切回页面一看多了一大段代码。。。神游回来顿时出了冷汗。
面试官看我不明白还给我解释了好多。。。
我发现我对生成器和迭代器的概念弄错了。。我还以为我以前用的这个是生成器，但是这个是列表生成式
1  iter = [i for i in range(0, 5)]   下面这个才是生成器，</description>
    </item>
    
    <item>
      <title>轻文面试经历</title>
      <link>https://malu.ome/post/%E8%BD%BB%E6%96%87%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/</link>
      <pubDate>Wed, 14 Mar 2018 13:15:13 +0000</pubDate>
      
      <guid>https://malu.ome/post/%E8%BD%BB%E6%96%87%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/</guid>
      <description>二月份寒假在家的时候看到V2EX上面有轻文的招聘贴，自己感觉十分心水。就抱着试一试的心态尝试满足他的职位描述去学习。我在三月初的时候在BOSS招聘平台上向它们投递了一份简历，之后就沉寂了一段时间。直到我以为我的简历直接被筛选掉心灰意冷后3月12号的中午它们BOSS直聘的人事专员给我发消息问我什么时候能来面试。我第一反应是能不能给一段时间刷一下题，于是考虑周六，但是周六人家不上班啊，于是周五，感觉周五下午去面试不太好，于是就发消息问周四下午行不行，那时候我还是思想斗争了很久。没想到人家第二天直接问我今天有空吗。我回答了有，于是在中午看了一下TCP的三次握手和四次挥手就匆匆从学校出发了。由于是第一次面试对面试总有一种恐惧感，总怕我不能很好的表达清楚意思，大脑一片空白，事实证明我比我想象的还要差。 经过一次公交车中转后我到达了光谷软件园，那个地方比想象中的还要偏僻。路上随处都在修高架，到处都是工程车。公交车直接在马路上到站，下车就是和车辆在一条马路上相错行走，因为周围都是围起来的工地。在腾讯地图的指引下找到了轻文公司所在的大楼，稍微在下面等待了一下就上去了，上去后发现它们公司还是很明显的，就是大门需要刷工牌，于是我和他们外面打电话准备进去的员工说了一下我是来应聘的一起进去了。 进公司后发现它们公司也不是很大，大概十几二十个人在一起办公，让我等待了一下由一个人要了一份简历之后就带我进了一个办公室。之后就开始面试了。 面试开始考官还问我怎么那么早就开始找实习。。。我说现在不都开始春招了么，而且我也确定不考研究生了，可不就出来找实习了。之后问了我一些问题，感觉都还是很基础的，但是我答得不是很好。感觉都没打出来，也看得出啦他甚不得满意，之后就是叫我回去等消息了，我感觉是GG了。出来一看才十几分钟。彻底凉凉了。。作为学习这里还是吧记忆中问到的问题彻底搞明白，在这里记录一下吧。
快排实现原理。 从数列中挑出一个元素，使得它左边的元素都比它小，右边的元素都比他大。 之后在这个元素的左边和右边的分区递归执行上述操作，直至左右区间相等。
链表插入操作的实现 单向链表只需要使得要插入的节点的next指针指向插入位置的下一个节点，插入位置的前节点的next指针指向插入的节点。 双向链表需要使得插入位置的下一个节点的pre指针指向要插入的节点，要插入节点的next指针指向插入位置的下一个节点，插入位置的上一个节点的next指针指向要插入的节点，要插入节点的pre指针指向插入位置的上一个节点。（我觉得这种问题我觉得交流起来很麻烦，远不如在纸上写得方便清楚，但是也凸显了自己平时很少尝试用说出来的方式描述自己的思路）
反向迭代一个列表 我的第一思路是列表的reverse方法，但是后面是说道切片感觉考官应该想要的是[::-1] 三个参数，左区间，右区间，步长。区间是左闭右开。 (自己确实没这么用过，这里还迷糊了一阵，还以为是spilt方法。。。)
知道浅拷贝和深拷贝吗？ 这里下意识的说知道，但是却不能很好的表达出来，大抵也是自己理解不深吧。 浅拷贝只拷贝父对象，不会拷贝对象内部的元素 浅拷贝产生的新对象中的可变对象的值发生改变会对原对象的值产生副作用，因为仅仅是拷贝了引用。 深拷贝会拷贝对象及其子元素。
知道可变对象和不可变对象吗？ 这里我回答了知道，事实是我只是知道在函数使用传参的时候如果函数里修改了参数和的值可变对象的是在外部也会改变。(感觉很像作用域，那时候满脑子是set啥的。。。感觉左边变量右边一个值啥的都是对象，用久了都忘记还有int， string之类的类型了。) 可变对象有列表(list)和字典(dict) 不可变对象有数值类，字符串，元组（tuple)，集合(set)
迭代的几种方法 这问题问得我一脸懵逼，我不知道问的是什么 开始我回答说不是for in么，还有个items方法。 后面考官解释了一下还是迷迷糊糊的， 类似for key, value in dict.items(): 这样？ 但是还想问的是yield？
你了解元类吗？ 直说了我不了解，接下来也没问了。 type,Python里类都是动态创建的，type()函数可以返回一个对象的类型，也可以创建一个新的类型。传入类名，继承的父类和方法名称和函数绑定
数据库底层是怎么实现的 B树或B+树 二次提问知道B树或B+树是怎么样的吗就蔫了。 B树是一颗节点内可以拥有n个数据而拥有n+1个子女的树，其中子树下的元素会比父节点左边的元素大比右边的元素小。B树中所有叶节点都在同一层 B+树是B树的一个变种，其数据只存在叶节点中，	其他节点只是在搜索中用来指引到正确节点，相邻叶节点顺序链接
红黑树了解吗？ 在我回答不了解后考官说了红黑树是一颗自平衡的二叉查找树。 事后了解了一下，红黑树并不追求完全的平衡，但是在删除操作AVL需要旋转的量级为O(logN)，而红黑树至多需要三次操作就可以。所以统计性能要比AVL树要好。
说一下二叉树的遍历和三种遍历的优点 但是只知道前序遍历，中序遍历，后序遍历。完全没想过他们之间有什么优点。 前序遍历在第一次遍历到节点时就执行操作，一般是想执行操作可选用。 中序遍历对与二分搜索树来说操作顺序符合从小到大（或从大到小）的顺序，遍历输出排序好的结果需要使用中序遍历。 后续遍历特点是执行操作时，肯定已经遍历过该节点的左右子节点，故适用于要进行破坏性操作的情况，比如删除所有节点。
了解RESTful吗？谈一下你的看法 我说了用URL表示资源的地址，用HTTP方法表示对资源的操作，返回的状态表示操作的结果。
谈下你对单元测试的理解和看法 我也就只说了单元测试对开发的方便，如果今后会修改一些代码也只需要跑一下测试。
知道设计模式吗？ 坦白不怎么了解，虽然知道职务描述上写要知道设计模式，自己也看了一些，可是也没实际用过。不了解工程上的细节。。。
最后才发现我即使是在一些开放性的问题上，谈的也很少，很多时候都是说到一般突然停下来，想很久。一般这个时候我都是在考虑用什么词描述比较好，可是这在对方看来就会很尴尬。。。今后或许在写代码的时候也应该使用小黄鸭调试法。尽量让自己的思路能够说出来。 后面考官了说了自己对面对对象那方面了解太少了，毕竟Python是门面对对象的语言。自己确实平常在码代码的时候不会特别注重这方面的东西。不管怎么说再接再厉吧。要不毕业后再试一下？</description>
    </item>
    
  </channel>
</rss>
